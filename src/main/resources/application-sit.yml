server:
  port: 8888

maxTotal: 100
defaultMaxPerRoute: 20
connectTimeOut: 60000
socketTimeOut: 30000


eureka:
  instance:
    hostname: localhost
  client:
  #声明自己是个服务端
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

  #=========redis基础配置=========
spring.redis.database: 0
spring.redis.host: 127.0.0.1
spring.redis.port: 6380
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout: 3000

#=========redis线程池设置=========
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle: 200

#连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle: 200

# 如果赋值为-1，则表示不限制；pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active: 2000

# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时
spring.redis.pool.max-wait: 1000

    # 数据库配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ruserver?useSSL=false&characterEncoding=UTF-8
    username: root
    password: bNVOqb7WKLX5Bjnw+LMv92taj25KOxDimXxILPQjw42wgv+1lHzOH8kr97xDwWdhpY67QuYCS7sWN4W46YbkFA==
    maxActive: 50 #<!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制 -->
    initialSize: 20  #<!-- 连接初始值，连接池启动时创建的连接数量的初始值 -->
    maxWait: 60000  #配置获取连接等待超时的时间
    minIdle: 20 #<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
    timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 300000  #配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: select 1 #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testOnBorrow: false    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: config,wall,stat
    connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=true
#  redis:
#    sentinel:
#      master: mymaster
#      nodes: 127.0.0.1:26379

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: net.xdclass.eureka_server.domain.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
    key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1

    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false